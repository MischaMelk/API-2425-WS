<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    {% block head %}
      <title>{{ title }}</title>
    {% endblock %}
    {% if NODE_ENV == "development" %}
      <script
        type="module"
        src="http://localhost:5173/@vite/client"
        defer></script>
      <script
        type="module"
        src="http://localhost:5173/client/index.js"
        defer></script>
    {% else %}
      <link rel="stylesheet" href="server/views/index.css">
      <script src="/index.js" defer></script>
    {% endif %}
    {% block styles %}
    {% endblock %}
    {% block scripts %}
    {% endblock %}
  </head>

  <body>
    <header></header>
    <main>
      {% block content %}
      {% endblock %}


    </main>
    <footer></footer>
    <script>

          const evtSource = new EventSource('/events');

          const priceFormatters = {
        eur: new Intl.NumberFormat('nl-NL', { style: 'currency', currency: 'EUR' }),
        usd: new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }),
        btc: { format: (value) => `${value.toFixed(8)} BTC` },
        cny: new Intl.NumberFormat('zh-CN', { style: 'currency', currency: 'CNY' }),
        gbp: new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }),
        rur: new Intl.NumberFormat('ru-RU', { style: 'currency', currency: 'RUB' })
      };

      evtSource.onmessage = function(event) {
        const data = JSON.parse(event.data);

        data.forEach(coin => {
          const eur = document.getElementById(`price-eur-${coin.name}`);
          const nieuwePrijs = priceFormatters.eur.format(coin.price);

          if (eur) {
      console.log(`🔁 ${coin.name} | Huidige waarde op pagina: ${eur.textContent} | Nieuwe waarde uit SSE: ${nieuwePrijs}`);
      eur.textContent = nieuwePrijs;
          }

          const indexPrice = document.getElementById(`price-${coin.name}`);
          if (indexPrice) indexPrice.textContent = `€ ${coin.price}`;

          const usd = document.getElementById(`price-usd-${coin.name}`);
          if (usd && coin.price_usd !== undefined) usd.textContent = priceFormatters.usd.format(coin.price_usd);

          const btc = document.getElementById(`price-btc-${coin.name}`);
          if (btc && coin.price_btc !== undefined) {
      // Gebruik de aangepaste formatter voor BTC
      btc.textContent = priceFormatters.btc.format(coin.price_btc);
          }

          const cny = document.getElementById(`price-cny-${coin.name}`);
          if (cny && coin.price_cny !== undefined) cny.textContent = priceFormatters.cny.format(coin.price_cny);

          const gbp = document.getElementById(`price-gbp-${coin.name}`);
          if (gbp && coin.price_gbp !== undefined) gbp.textContent = priceFormatters.gbp.format(coin.price_gbp);

          const rur = document.getElementById(`price-rur-${coin.name}`);
          if (rur && coin.price_rur !== undefined) rur.textContent = priceFormatters.rur.format(coin.price_rur);
        });
      };



          evtSource.onerror = function(error) {
      console.error('SSE fout:', error);
          };



        // Toon de ingestelde doelen vanuit sessionStorage
        window.addEventListener("DOMContentLoaded", () => {
          const goals = JSON.parse(sessionStorage.getItem("goals") || "{}");

          Object.entries(goals).forEach(([coinName, price]) => {
      const listItem = document.querySelector(`#goal-${coinName}`);
      if (listItem) {
        listItem.textContent = `€ ${price}`;
      }
          });
        });


    </script>
  </body>
</html>